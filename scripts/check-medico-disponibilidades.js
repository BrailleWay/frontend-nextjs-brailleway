const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function checkMedicoDisponibilidades() {
  console.log('üîç Verificando disponibilidades dos m√©dicos...\n');

  try {
    // Buscar todos os m√©dicos ativos
    const medicos = await prisma.medico.findMany({
      where: { ativo: true },
      include: {
        especialidade: true,
        disponibilidades: true
      }
    });

    console.log(`üìã Total de m√©dicos ativos: ${medicos.length}\n`);

    const medicosSemDisponibilidade = [];
    const medicosComDisponibilidade = [];

    for (const medico of medicos) {
      if (medico.disponibilidades.length === 0) {
        medicosSemDisponibilidade.push(medico);
      } else {
        medicosComDisponibilidade.push(medico);
      }
    }

    // M√©dicos sem disponibilidade
    if (medicosSemDisponibilidade.length > 0) {
      console.log('‚ùå M√©dicos SEM disponibilidade configurada:');
      medicosSemDisponibilidade.forEach(m => {
        console.log(`   - ${m.nome} (${m.especialidade.nome}) - CRM: ${m.crm}`);
      });
      console.log('');
    }

    // M√©dicos com disponibilidade
    if (medicosComDisponibilidade.length > 0) {
      console.log('‚úÖ M√©dicos COM disponibilidade configurada:');
      medicosComDisponibilidade.forEach(m => {
        console.log(`   - ${m.nome} (${m.especialidade.nome}) - CRM: ${m.crm}`);
        console.log(`     Disponibilidades: ${m.disponibilidades.length} hor√°rios`);
        
        const dias = ['Domingo', 'Segunda', 'Ter√ßa', 'Quarta', 'Quinta', 'Sexta', 'S√°bado'];
        m.disponibilidades.forEach(d => {
          console.log(`       ${dias[d.diaSemana]}: ${d.horaInicio.toTimeString().slice(0,5)} - ${d.horaFim.toTimeString().slice(0,5)}`);
        });
        console.log('');
      });
    }

    // Estat√≠sticas
    console.log('üìä Estat√≠sticas:');
    console.log(`   - Total de m√©dicos: ${medicos.length}`);
    console.log(`   - Com disponibilidade: ${medicosComDisponibilidade.length}`);
    console.log(`   - Sem disponibilidade: ${medicosSemDisponibilidade.length}`);
    console.log(`   - Taxa de configura√ß√£o: ${((medicosComDisponibilidade.length / medicos.length) * 100).toFixed(1)}%`);

    // Sugest√µes
    if (medicosSemDisponibilidade.length > 0) {
      console.log('\nüí° Sugest√µes:');
      console.log('   - Entre em contato com os m√©dicos sem disponibilidade para configurar seus hor√°rios');
      console.log('   - Considere criar um processo automatizado de configura√ß√£o de disponibilidade');
      console.log('   - Implemente notifica√ß√µes para m√©dicos rec√©m-cadastrados');
    }

  } catch (error) {
    console.error('‚ùå Erro durante a verifica√ß√£o:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkMedicoDisponibilidades(); 