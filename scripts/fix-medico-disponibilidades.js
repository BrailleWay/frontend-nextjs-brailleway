// =============================
// scripts/fix-medico-disponibilidades.js
// Script para adicionar disponibilidades padr√£o para m√©dicos sem configura√ß√£o
// =============================

const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function fixMedicoDisponibilidades() {
  console.log('üîß Corrigindo disponibilidades dos m√©dicos...\n');

  try {
    // Buscar m√©dicos sem disponibilidade
    const medicosSemDisponibilidade = await prisma.medico.findMany({
      where: { 
        ativo: true,
        disponibilidades: {
          none: {}
        }
      },
      include: {
        especialidade: true
      }
    });

    console.log(`üìã Encontrados ${medicosSemDisponibilidade.length} m√©dicos sem disponibilidade:\n`);

    if (medicosSemDisponibilidade.length === 0) {
      console.log('‚úÖ Todos os m√©dicos j√° t√™m disponibilidade configurada!');
      return;
    }

    // Mostrar m√©dicos que ser√£o corrigidos
    medicosSemDisponibilidade.forEach(m => {
      console.log(`   - ${m.nome} (${m.especialidade.nome}) - CRM: ${m.crm}`);
    });

    console.log('\n‚è∞ Adicionando disponibilidade padr√£o (Segunda a Sexta, 8h √†s 18h)...\n');

    // Disponibilidade padr√£o: Segunda a Sexta, 8h √†s 18h
    const disponibilidadesPadrao = [
      { diaSemana: 1, horaInicio: '08:00', horaFim: '18:00' }, // Segunda
      { diaSemana: 2, horaInicio: '08:00', horaFim: '18:00' }, // Ter√ßa
      { diaSemana: 3, horaInicio: '08:00', horaFim: '18:00' }, // Quarta
      { diaSemana: 4, horaInicio: '08:00', horaFim: '18:00' }, // Quinta
      { diaSemana: 5, horaInicio: '08:00', horaFim: '18:00' }, // Sexta
    ];

    let medicosCorrigidos = 0;

    for (const medico of medicosSemDisponibilidade) {
      console.log(`üîß Configurando ${medico.nome}...`);
      
      try {
        for (const disp of disponibilidadesPadrao) {
          await prisma.disponibilidadeMedico.create({
            data: {
              medicoId: medico.id,
              diaSemana: disp.diaSemana,
              horaInicio: new Date(`1970-01-01T${disp.horaInicio}:00`),
              horaFim: new Date(`1970-01-01T${disp.horaFim}:00`),
              disponivel: true,
            },
          });
        }
        
        medicosCorrigidos++;
        console.log(`   ‚úÖ ${medico.nome} configurado com sucesso`);
      } catch (error) {
        console.error(`   ‚ùå Erro ao configurar ${medico.nome}:`, error.message);
      }
    }

    console.log(`\nüéâ Processo conclu√≠do!`);
    console.log(`   - M√©dicos corrigidos: ${medicosCorrigidos}/${medicosSemDisponibilidade.length}`);
    
    if (medicosCorrigidos < medicosSemDisponibilidade.length) {
      console.log(`   - ${medicosSemDisponibilidade.length - medicosCorrigidos} m√©dicos com erro`);
    }

    // Verificar resultado final
    console.log('\nüìä Verifica√ß√£o final:');
    const medicosAindaSemDisponibilidade = await prisma.medico.findMany({
      where: { 
        ativo: true,
        disponibilidades: {
          none: {}
        }
      },
      include: {
        especialidade: true
      }
    });

    if (medicosAindaSemDisponibilidade.length === 0) {
      console.log('‚úÖ Todos os m√©dicos agora t√™m disponibilidade configurada!');
    } else {
      console.log(`‚ö†Ô∏è  Ainda h√° ${medicosAindaSemDisponibilidade.length} m√©dicos sem disponibilidade:`);
      medicosAindaSemDisponibilidade.forEach(m => {
        console.log(`   - ${m.nome} (${m.especialidade.nome})`);
      });
    }

  } catch (error) {
    console.error('‚ùå Erro durante a corre√ß√£o:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// Perguntar se o usu√°rio quer executar
console.log('‚ö†Ô∏è  ATEN√á√ÉO: Este script ir√° adicionar disponibilidade padr√£o para m√©dicos sem configura√ß√£o.');
console.log('   Disponibilidade padr√£o: Segunda a Sexta, 8h √†s 18h');
console.log('   Deseja continuar? (y/N)');

// Para execu√ß√£o autom√°tica, descomente a linha abaixo:
// fixMedicoDisponibilidades();

// Para execu√ß√£o interativa, mantenha comentado e execute manualmente
console.log('\nüí° Para executar, descomente a linha "fixMedicoDisponibilidades();" no final do arquivo'); 